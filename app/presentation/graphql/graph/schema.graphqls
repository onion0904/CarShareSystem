# スカラー型の定義
scalar DateTime # "2025-02-02T12:00:00Z" のような形式

# User型の定義
type User {
  id: ID!
  lastName: String!
  firstName: String!
  email: String!
  password: String!
  icon: String
  createdAt: DateTime!
  updatedAt: DateTime!
  groups: [Group!]!
  events: [Event!]!
}

# Group型の定義
type Group {
  id: ID!
  name: String!
  icon: String
  createdAt: DateTime!
  updatedAt: DateTime!
  users: [User!]!
}

# Event型の定義
type Event {
  id: ID!
  userID: ID!
  together: Boolean!
  description: String!
  year: Int!
  month: Int!
  day: Int!
  date: DateTime!
  createdAt: DateTime!
  startDate: DateTime!
  endDate: DateTime!
  updatedAt: DateTime!
  important: Boolean!
}

# クエリの定義(データの取得のエンドポイント)
type Query {
  # ユーザー関連
  user(id: ID!): User
  users: [User!]!

  # グループ関連
  group(id: ID!): Group
  groups: [Group!]!

  # イベント関連
  event(id: ID!): Event
  events: [Event!]!
  eventsByUser(userId: ID!): [Event!]!
  eventsByGroup(groupId: ID!): [Event!]!
  eventsByMonth(input: MonthlyEvent!): [Event!]!

}

# 入力型の定義
input CreateUserInput {
  lastName: String!
  firstName: String!
  email: String!
  password: String!
  icon: String
}

input UpdateUserInput {
  lastName: String
  firstName: String
  email: String
  password: String
  icon: String
}

input CreateGroupInput {
  name: String!
  icon: String
}

input UpdateGroupInput {
  name: String
  icon: String
}

input CreateEventInput {
  userId: ID!
  together: Boolean!
  description: String!
  year: Int!
  month: Int!
  day: Int!
  date: DateTime!
  startDate: DateTime!
  endDate: DateTime!
  important: Boolean!
}

input UpdateEventInput {
  together: Boolean
  description: String
  year: Int
  month: Int
  day: Int
  date: DateTime
  startDate: DateTime
  endDate: DateTime
  important: Boolean
}

input MonthlyEvent {
  year: Int
  month: Int
} 

# ミューテーションの定義(データの作成、更新、削除のエンドポイント)
type Mutation {
  # ユーザー関連
  createUser(input: CreateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  deleteUser(id: ID!): Boolean!

  # グループ関連
  createGroup(input: CreateGroupInput!): Group!
  updateGroup(id: ID!, input: UpdateGroupInput!): Group!
  deleteGroup(id: ID!): Boolean!
  addUserToGroup(groupId: ID!, userId: ID!): Group!
  removeUserFromGroup(groupId: ID!, userId: ID!): Group!

  # イベント関連
  createEvent(input: CreateEventInput!): Event!
  updateEvent(id: ID!, input: UpdateEventInput!): Event!
  deleteEvent(id: ID!): Boolean!
}